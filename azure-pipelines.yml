# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

parameters:
- name: generateCSharp
  displayName: 'Generate C# SDK'
  type: boolean
  default: false
- name: generateTypeScript
  displayName: 'Generate TypeScript SDK'
  type: boolean
  default: false
- name: generateJava
  displayName: 'Generate Java SDK'
  type: boolean
  default: false
# - name: generatePython
#   displayName: 'Generate Python SDK'
#   type: boolean
#   default: false
# - name: generatePHP
#   displayName: 'Generate PHP SDK'
#   type: boolean
#   default: false
# - name: generateRuby
#   displayName: 'Generate Ruby SDK'
#   type: boolean
#   default: false


pool:
  vmImage: ubuntu-latest

stages:
- stage: GenerateSDKs
  jobs:
  - template: .ado/templates/generate-sdk-template.yml
    parameters:
      language: 'csharp'
      generateSDK: ${{ parameters.generateCSharp }}
  - template: .ado/templates/generate-sdk-template.yml
    parameters:
      language: 'typescript'
      generateSDK: ${{ parameters.generateTypeScript }}
  - template: .ado/templates/generate-sdk-template.yml
    parameters:
      language: 'java'
      generateSDK: ${{ parameters.generateJava }}
  # - template: .ado/templates/generate-sdk-template.yml
  #   parameters:
  #     language: 'php'
  #     generateSDK: ${{ parameters.generatePHP }}
  # - template: .ado/templates/generate-sdk-template.yml
  #   parameters:
  #     language: 'ruby'
  #     generateSDK: ${{ parameters.generateRuby }}
  # - template: .ado/templates/generate-sdk-template.yml
  #   parameters:
  #     language: 'python'
  #     generateSDK: ${{ parameters.generatePython }}
