# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

parameters:
- name: generateCSharp
  displayName: 'Generate C# SDK'
  type: boolean
  default: false
- name: generateJava
  displayName: 'Generate Java SDK'
  type: boolean
  default: false
- name: generatePython
  displayName: 'Generate Python SDK'
  type: boolean
  default: false
- name: generateTypeScript
  displayName: 'Generate TypeScript SDK'
  type: boolean
  default: false
- name: generateTypeScript
  displayName: 'Generate TypeScript SDK'
  type: boolean
  default: false
- name: generatePHP
  displayName: 'Generate PHP SDK'
  type: boolean
  default: false
- name: generateRuby
  displayName: 'Generate Ruby SDK'
  type: boolean
  default: false


pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Validate_Spec_Stage'
  jobs:
  - job: Validate_OpenAPI_Spec
    steps:
    - script: cat openapi.json
      displayName: 'Display openapi.json Content'    
    - script: |
        # Assuming the OpenAPI spec is named 'openapi.yaml' and located at the root
        curl -X POST -H 'Content-Type: application/json' --data-binary @openapi.json https://validator.swagger.io/validator/debug
        #TODO@MUDIT: CALL INTERNAL SERVICE INSTEAD AND ADD LOGIC TO SHOW ERRORS AND FAIL PIPELINE BASED ON RESULT. 
      displayName: 'Validate OpenAPI Specification'
